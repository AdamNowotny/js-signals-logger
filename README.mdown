js-signal-logger
================
Reduce the amount of code you have to write for unit testing components using [JS-Signals](http://millermedeiros.github.com/js-signals/).

It shows how many times specified signals have been dispatched.

Other features:
-  filter which dispatches should be counted

API
---

## Configuration
```js
var logger = new SignalLogger({ finished: obj.finished });
```

## Signal count
Returns the amount of times a watched signal has been dispatched.

```js
logger.finished.count
```

## Filtering
```js
logger.finished.setFilter(function (param1, param2, ...) {
	return true; // always count this signal (default)
} );
```

Usage
-------

### Basic usage

```js
it('should count signals', function () {
	var obj = {	finished: new signals.Signal() };
	var logger = new SignalLogger({ finished: obj.finished });

	obj.finished.dispatch();

	expect(logger.finished.count).toBe(1);
});
```

### Filtering

```js
it('should count filtered signals', function () {
	var obj = {	finished: new signals.Signal() };
	var logger = new SignalLogger({ finished: obj.finished });
	logger.finished.setFilter(function (signalArgs) {
		return signalArgs === 1;
	});

	obj.finished.dispatch(1);
	obj.finished.dispatch(2);
	obj.finished.dispatch(1);

	expect(logger.finished.count).toBe(2);
});
```
